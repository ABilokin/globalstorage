System({
  Login: {
    domain: 'Login',
    lookup: true,
    required: true,
    unique: true,
    example: 'Marcus Aurelius',
    control: 'InputBox',
    validate: login => {
      // TODO: implement OWASP recomendations
      return login.length >= 5;
    },
  },
  Password: {
    domain: 'PasswordHash',
    required: true,
    control: 'InputBox',
    validate: password => {
      // TODO: implement OWASP recomendations
      // See https://www.owasp.org/index.php/Authentication_Cheat_Sheet
      return true; // Auth.passwordStrength(password);
    },
  },
  Subdivision: { category: 'Subdivision' },
  Roles: Many('Role'),
  Blocked: { domain: 'Logical', default: false },

  SignOut: Action((data, callback) => {
    // TODO: implement remove session
  }),

  SignUp: Action((data, callback) => {
    // TODO: implement user registration
  }),

  Create: Action({
    Args: {
      Login: { domain: 'Login', required: true },
      Password: { domain: 'Password', required: true },
    },
    Execute: (session, { Login, Password }, callback) => {
      api.argon2
        .hash(Password, {
          type: api.argon2.argon2id,
        })
        .then(
          hash => {
            api.provider.create(
              'SystemUser',
              { Login, Password: hash },
              (err, id) => {
                if (err) {
                  callback(err);
                  return;
                }
                callback(null, id);
              }
            );
          },
          err => {
            callback(api.jstp.ERR_INTERNAL_API_ERROR);
          }
        );
    },
  }),
})
