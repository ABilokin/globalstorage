System({
  Login: {
    domain: 'Login',
    lookup: true,
    required: true,
    unique: true,
    example: 'Marcus Aurelius',
    control: 'InputBox',
    validate: login => {
      // TODO: implement OWASP recomendations
      return login.length >= 5;
    }
  },
  Password: {
    domain: 'PasswordHash',
    required: true,
    control: 'InputBox',
    validate: password => {
      // TODO: implement OWASP recomendations
      // See https://www.owasp.org/index.php/Authentication_Cheat_Sheet
      return true;
    }
  },
  Subdivision: { category: 'Subdivision' },
  Roles: Many('Role'),
  Blocked: { domain: 'Logical', default: false },

  SignIn: Action((session, { Login, Password }, callback) => {
    api.provider.select('SystemUser', { Login }).fetch((err, res) => {
      if (err) {
        callback(err);
        return;
      }
      const [user] = res;
      if (!user) {
        callback(null, 'ERR_WRONG_COMBINATION');
        return;
      }
      api.argon2.verify(user.Password, Password).then(match => {
        if (!match) {
          callback(null, 'ERR_WRONG_COMBINATION');
          return;
        }
        session.set('Id', user.Id);
        callback(null, `Success: ${user.Id}`);
      }).catch(callback);
    });
  }),

  SignOut: Action((session, data, callback) => {
    // TODO: implement remove session
  }),

  SignUp: Action((session, data, callback) => {
    // TODO: implement user registration
  })

})
