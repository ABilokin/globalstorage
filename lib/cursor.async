// Asynchronous functional mapping
//   fn - mapping function
//   done(err, arr) - callback on done
//   return - Cursor instance
//
Cursor.prototype.mapAsync = function(fn, done) {
  done(new Error('Not implemented'));
  return this;
};

// Asynchronous functional filter
//   fn - filtering function
//   done(err, arr) - callback on done
//   return - Cursor instance
//
Cursor.prototype.filterAsync = function(fn, done) {
  done(new Error('Not implemented'));
  return this;
};

// Asynchronous functional distinct filter
//   done(err, arr) - callback on done
//   return - Cursor instance
//
Cursor.prototype.distinctAsync = function(done) {
  done(new Error('Not implemented'));
  return this;
};

// Asynchronous functional find (legacy)
//   query - find expression
//   options - find options
//   done(err, arr) - callback on done
//   return - Cursor instance
//
Cursor.prototype.findAsync = function(query, options, done) {
  done(new Error('Not implemented'));
  return this;
};

// Asynchronous functional sort
//   fn - compare function
//   done(err, arr) - callback on done
//   return - Cursor instance
//
Cursor.prototype.sortAsync = function(fn, done) {
  done(new Error('Not implemented'));
  return this;
};
